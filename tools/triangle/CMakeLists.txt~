cmake_minimum_required(VERSION 3.16 FATAL_ERROR)
project(m++_api)

set(CMAKE_CXX_COMPILER /usr/bin/mpicxx.openmpi)

find_package(MPI)
if(MPI_FOUND)
  message("MPI FOUND")
  message(${MPI_LIBRARIES})
  include_directories(${MPI_INCLUDE_DIRS})
  link_directories(${MPI_LIBRARY_DIRS})
  add_definitions(${MPI_DEFINITIONS})
endif()

find_package(Jali)
if(Jali_FOUND)
  message("Jali FOUND")
  message(${Jali_LIBRARIES})
  include_directories(${Jali_INCLUDE_DIRS})
  link_directories(${Jali_LIBRARY_DIRS})
  add_definitions(${Jali_DEFINITIONS})
endif()

find_package(wonton)
if(wonton_FOUND)
  message("wonton FOUND")
  message(${WONTON_LIBRARIES})
  include_directories(${WONTON_INCLUDE_DIRS})
  link_directories(${WONTON_LIBRARY_DIRS})
  add_definitions(${WONTON_DEFINITIONS})
endif()

find_package(portage)
message("MPI 4")
if(portage_FOUND)
  message("PORTAGE FOUND")
  message(${PORTAGE_LIBRARIES})
  include_directories(${PORTAGE_INCLUDE_DIRS})
  link_directories(${PORTAGE_LIBRARY_DIRS})
  add_definitions(${PORTAGE_DEFINITIONS})
endif()

find_package(Eigen3)
if(EIGEN3_FOUND)
  message("EIGEN3 FOUND")
  include_directories(${EIGEN3_INCLUDE_DIRS})
  link_directories(${EIGEN3_LIBRARY_DIRS})
  add_definitions(${EIGEN3_DEFINITIONS})
endif()

include_directories("src")
aux_source_directory(solver/src solver_DIR_SRCS)
add_executable (M++Solver ${solver_DIR_SRCS} src/Identify.C src/MatrixGraph.C src/Algebra.C src/Shape.C src/Point.C src/Parallel.C src/Time.C src/ctools.C src/IO.C src/Mesh.C src/Cell.C src/Distribution.C src/Plot.C src/Quadrature.C src/DoF.C src/Sparse.C src/Interface.C src/Discretization.C src/LinearSolver.C src/DD.C src/Preconditioner.C src/TimeSeries.C src/ESolver.C src/Transfer.C src/Element.C src/FaceElement.C src/Newton.C src/Newmark.C src/Euler.C src/Small.C src/Schur.C)
target_link_libraries (M++Solver /usr/lib/x86_64-linux-gnu/libblas.so /usr/lib/x86_64-linux-gnu/liblapack.so ${MPI_LIBRARIES} /usr/lib/x86_64-linux-gnu/libsuperlu.so /usr/local/lib/libmesquite.a ${PORTAGE_LIBRARIES} ${WONTON_LIBRARIES} /usr/local/lib/libfasp.a)
set_target_properties(M++Solver PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

file(COPY "log" DESTINATION ${CMAKE_BINARY_DIR})
file(COPY "data/vtk" DESTINATION ${CMAKE_BINARY_DIR}/data)
file(COPY "conf" DESTINATION ${CMAKE_BINARY_DIR})
file(COPY "solver/conf" DESTINATION ${CMAKE_BINARY_DIR}/solver)

find_package(CGAL)
if(CGAL_FOUND)
  message("CGAL FOUND")
  include_directories(${CGAL_INCLUDE_DIRS})
  link_directories(${CGAL_LIBRARY_DIRS})
  add_definitions(${CGAL_DEFINITIONS})
  #foreach(mm ${CGAL_CONFIGURED_LIBRARIES})
    #message(${mm})
  #endforeach()
endif()

aux_source_directory(mesh/src mesh_DIR_SRCS)
add_executable (M++Mesh ${mesh_DIR_SRCS})
target_link_libraries (M++Mesh /usr/local/lib/libCGAL.so /usr/local/lib/libCGAL_Core.so /usr/lib/x86_64-linux-gnu/libgmp.so /usr/lib/x86_64-linux-gnu/libmpfr.so)
set_target_properties(M++Mesh PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

file(COPY "mesh/conf" DESTINATION ${CMAKE_BINARY_DIR}/mesh)
